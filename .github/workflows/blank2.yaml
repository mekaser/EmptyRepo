name: Triggered Workflow

on:
  repository_dispatch:
    types: [custom-event]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ fromJson(github.event.client_payload.data).branch }}

      - name: Set environment variables
        run: |
          echo "INPUTS=\"\"" > inputs.sh
          if [ "${{ fromJson(github.event.client_payload.data).APPDOME_API_TOKEN }}" != "null" ]; then
            echo "INPUTS+=\"APPDOME_API_TOKEN=${{ fromJson(github.event.client_payload.data).APPDOME_API_TOKEN }} \"" >> inputs.sh
          fi
          if [ "${{ fromJson(github.event.client_payload.data).SIGN_OPTIONS }}" != "null" ]; then
            echo "INPUTS+=\"SIGN_OPTIONS=${{ fromJson(github.event.client_payload.data).SIGN_OPTIONS }} \"" >> inputs.sh
          fi
          if [ "${{ fromJson(github.event.client_payload.data).TEAM_ID }}" != "null" ]; then
            echo "INPUTS+=\"TEAM_ID=${{ fromJson(github.event.client_payload.data).TEAM_ID }} \"" >> inputs.sh
          fi
          if [ "${{ fromJson(github.event.client_payload.data).APP_FILE }}" != "null" ]; then
            echo "INPUTS+=\"APP_FILE=${{ fromJson(github.event.client_payload.data).APP_FILE }} \"" >> inputs.sh
          fi
          if [ "${{ fromJson(github.event.client_payload.data).MOBILE_PROVISION_PROFILE_FILE }}" != "null" ]; then
            echo "INPUTS+=\"MOBILE_PROVISION_PROFILE_FILE=${{ fromJson(github.event.client_payload.data).MOBILE_PROVISION_PROFILE_FILE }} \"" >> inputs.sh
          fi
          if [ "${{ fromJson(github.event.client_payload.data).ENTITLEMENTS_FILE }}" != "null" ]; then
            echo "INPUTS+=\"ENTITLEMENTS_FILE=${{ fromJson(github.event.client_payload.data).ENTITLEMENTS_FILE }} \"" >> inputs.sh
          fi
          if [ "${{ fromJson(github.event.client_payload.data).CERTIFICATE_FILE }}" != "null" ]; then
            echo "INPUTS+=\"CERTIFICATE_FILE=${{ fromJson(github.event.client_payload.data).CERTIFICATE_FILE }} \"" >> inputs.sh
          fi
          if [ "${{ fromJson(github.event.client_payload.data).CERTIFICATE_PASSWORD }}" != "null" ]; then
            echo "INPUTS+=\"CERTIFICATE_PASSWORD=${{ fromJson(github.event.client_payload.data).CERTIFICATE_PASSWORD }} \"" >> inputs.sh
          fi
          if [ "${{ fromJson(github.event.client_payload.data).FUSION_SET_ID }}" != "null" ]; then
            echo "INPUTS+=\"FUSION_SET_ID=${{ fromJson(github.event.client_payload.data).FUSION_SET_ID }} \"" >> inputs.sh
          fi
          if [ "${{ fromJson(github.event.client_payload.data).KEYSTORE_FILE }}" != "null" ]; then
            echo "INPUTS+=\"KEYSTORE_FILE=${{ fromJson(github.event.client_payload.data).KEYSTORE_FILE }} \"" >> inputs.sh
          fi
          if [ "${{ fromJson(github.event.client_payload.data).KEYSTORE_PASSWORD }}" != "null" ]; then
            echo "INPUTS+=\"KEYSTORE_PASSWORD=${{ fromJson(github.event.client_payload.data).KEYSTORE_PASSWORD }} \"" >> inputs.sh
          fi
          if [ "${{ fromJson(github.event.client_payload.data).KEYSTORE_ALIAS }}" != "null" ]; then
            echo "INPUTS+=\"KEYSTORE_ALIAS=${{ fromJson(github.event.client_payload.data).KEYSTORE_ALIAS }} \"" >> inputs.sh
          fi
          if [ "${{ fromJson(github.event.client_payload.data).KEYSTORE_KEY_PASSWORD }}" != "null" ]; then
            echo "INPUTS+=\"KEYSTORE_KEY_PASSWORD=${{ fromJson(github.event.client_payload.data).KEYSTORE_KEY_PASSWORD }} \"" >> inputs.sh
          fi
          if [ "${{ fromJson(github.event.client_payload.data).GOOGLE_PLAY_SIGNING }}" != "null" ]; then
            echo "INPUTS+=\"GOOGLE_PLAY_SIGNING=${{ fromJson(github.event.client_payload.data).GOOGLE_PLAY_SIGNING }} \"" >> inputs.sh
          fi
          if [ "${{ fromJson(github.event.client_payload.data).SIGN_FINGERPRINT }}" != "null" ]; then
            echo "INPUTS+=\"SIGN_FINGERPRINT=${{ fromJson(github.event.client_payload.data).SIGN_FINGERPRINT }} \"" >> inputs.sh
          fi
          if [ "${{ fromJson(github.event.client_payload.data).OUTPUT_APP_NAME }}" != "null" ]; then
            echo "INPUTS+=\"OUTPUT_APP_NAME=${{ fromJson(github.event.client_payload.data).OUTPUT_APP_NAME }} \"" >> inputs.sh
          fi

      - name: Source inputs
        id: source_inputs
        run: . ./inputs.sh

      - name: Appdome build-2secure
        uses: Appdome/github_build-2secure@pipline_testing
        with: ${{ steps.source_inputs.outputs.INPUTS }}

      - name: Example of using Appdome secured app
        run: |
          echo ${{ env.APPDOME_SECURED_APP }}
          echo ${{ env.APPDOME_SECURED_APP_SECOND_OUTPUT }}
